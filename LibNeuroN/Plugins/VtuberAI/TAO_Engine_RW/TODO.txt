TODO:
    · Fix .obj model importation.
    · Test audio.
    · Test animator/animations.
    · Create better lighting.
    · Create text for UI.
    · Test custom shaders.
    · Create better UI.
    · Optimize OpenGL code.
    · Make the engine compatible with OpenGl ES.
    · Make the engine compatible with Vulkan.
    · (Probably not) Make the engine compatible with Direct3D 9.
        · (Probably not) Create D3DVK (Direct3D to Vulkan) to make it compatible with other operating systems.
        · (Probably not) Create D3DGL (Direct3D to OpenGL) to make it compatible with older machines.
    · Create my own image library for the engine.
    · Create raycasting.
    · Create RTX.
    · Create skybox (cubemaps).
    · Create shadows.
    · Create perlin noise to TMD.
    · Create real-time perlin noise.
    · Fix antialiasing.
    · Port to mobile phone.
    · Test the engine in Windows (x86, x86_64, arm32, arm64).
    · Test the engine in Mac OS (x86_64, arm64).
    · Test the engine in Linux (x86, arm32, arm64).
    · Test the engine in FreeBSD (x86, x86_64, arm32, arm64).
    
Tested platforms:
    · Linux x86_64:
        · Works fine with Mono, but in some distributions you need to use DotNet.
    
Why will (probably) not make the engine compatible with Direct3D 9?
-Because this engine is created using Linux and Direct3D isn't compatible with Linux.

Why Direct3D 9 and not Direct3D 11 or higher?
-Because we want this engine to be compatible with old machines.

Why use this game engine and not others?
-The only reason for you would want to use this engine is how to undestand how does OpenGL works on C#.